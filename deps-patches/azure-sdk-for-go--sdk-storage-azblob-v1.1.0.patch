From 986b7ff8b81ab8594f4e734ca2c40cdbd8e56085 Mon Sep 17 00:00:00 2001
From: v1gnesh <v1gnesh@users.noreply.github.com>
Date: Wed, 13 Dec 2023 04:36:14 +0000
Subject: [PATCH] Add zOS support azblob v1.1.0

---
 sdk/storage/azblob/blockblob/mmf_zos.go | 38 +++++++++++++++++++++++++
 1 file changed, 38 insertions(+)
 create mode 100644 sdk/storage/azblob/blockblob/mmf_zos.go

diff --git a/sdk/storage/azblob/blockblob/mmf_zos.go b/sdk/storage/azblob/blockblob/mmf_zos.go
new file mode 100644
index 0000000000..86f72d8544
--- /dev/null
+++ b/sdk/storage/azblob/blockblob/mmf_zos.go
@@ -0,0 +1,38 @@
+//go:build go1.18 && zos
+// +build go1.18
+// +build zos
+
+// Copyright (c) Microsoft Corporation. All rights reserved.
+// Licensed under the MIT License. See License.txt in the project root for license information.
+
+package blockblob
+
+import (
+	"fmt"
+	"os"
+	"syscall"
+)
+
+// mmb is a memory mapped buffer
+type mmb []byte
+
+// newMMB creates a new memory mapped buffer with the specified size
+func newMMB(size int64) (mmb, error) {
+	prot, flags := syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_PRIVATE
+	addr, err := syscall.Mmap(-1, 0, int(size), prot, flags)
+	if err != nil {
+		return nil, os.NewSyscallError("Mmap", err)
+	}
+	return mmb(addr), nil
+}
+
+// delete cleans up the memory mapped buffer
+func (m *mmb) delete() {
+	err := syscall.Munmap(*m)
+	*m = nil
+	if err != nil {
+		// if we get here, there is likely memory corruption.
+		// please open an issue https://github.com/Azure/azure-sdk-for-go/issues
+		panic(fmt.Sprintf("Munmap error: %v", err))
+	}
+}
-- 
2.42.1

